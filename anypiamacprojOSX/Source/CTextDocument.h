// $Id: CTextDocument.h,v 1.5 2010/08/16 18:18:07 djolson Exp $// =============================================================================// CTextDocument.h  ©1996-1999 Metrowerks Inc. All rights reserved.// =============================================================================#ifndef _H_CTextDocument#define _H_CTextDocument#pragma once#include <LSingleDoc.h>#include <UStandardDialogs.h>#include "Document.h"#include "PiaCalAny.h"#include "ConfigNonFile.h"#include "BaseYearNonFile.h"#include "FieldOfficeInfoNonFile.h"#include "piaout.h"#include "pebsout.h"#include "AnypiaOut.h"#include "piareadAny.h"#include "piawriteAny.h"#include "AssumptionsNonFile.h"#include "AwbiDataNonFile.h"#include "EarnProject.h"#include "TaxData.h"#include "UserAssumptions.h"#include "piaparmsAny.h"#include "AwbiDataNonFile.h"class CTextView;class CTextDocument : public LSingleDoc {public:                     CTextDocument(                        LCommander* inSuper,                        FSSpec*     inFileSpec);   virtual           ~CTextDocument();   virtual Boolean   IsModified();   virtual void      DoAESave(                        FSSpec& inFileSpec,                        OSType  inFileType);   virtual void      DoSave();   virtual void      DoRevert();   virtual void      DoPrint();   virtual void      DoCalculate();   virtual Boolean   AskSaveAs(                        FSSpec&  outFSSpec,                        Boolean  inRecordIt);   virtual OSType    GetFileType() const;   virtual Boolean   ObeyCommand(                        CommandT  inCommand,                        void*     ioParam = nil);   virtual void      FindCommandStatus(                        CommandT  inCommand,                        Boolean&  outEnabled,                        Boolean&  outUsesMark,                        UInt16&   outMark,                        Str255    outName);					   // @cmember Places all the text generated by Run->Start into the window.   void              Repopulate( int pageNum = -1 );   // @cmember Returns pointer to text view.   CTextView*        getTextView() const;protected:   virtual void      NameNewDoc();   virtual void      OpenFile(                        FSSpec& inFileSpec);   virtual void      SetPrintFrameSize();   CTextView*        mTextView;   PP_StandardDialogs::LFileDesignator* mFileDesignator;	private:                     CTextDocument();                     CTextDocument( const CTextDocument& inOriginal );   CTextDocument& operator=(const CTextDocument& inRhs);   // @cmember Initialize the PIA data when a CTextDocument is created.   void              NewPIA();   // @cmember Delete the PIA data when a CTextDocument is deleted.   void              DeletePIA();   // @cmember Clear out the data structures.   void              DeleteContents();public:   Document           genfile;  // file name and functions to open and close   // Basic worker data.   WorkerData*       workerData;   // Pia calculation data.   PiaData*          piadata;   // Widow and other family members' basic data.   WorkerDataArray*  widowDataArray;   // Widow and other family members' calculation data.   PiaDataArray*     widowArray;   // Secondary benefits.   SecondaryArray*   secondaryArray;   AwbiDataNonFile*  awbidat;   AssumptionsNonFile* assumptions;   UserAssumptions*  userAssumptions;   PiaParamsAny*     piaparms;   ConfigNonFile*    config;   BaseYearNonFile*  baseyear;   PiaCalAny*        piacal;   TaxData*          taxes;   TaxRates*         taxrates;   LawChangeArray*   lawChange;   Pebs*             pebs;   FieldOfficeInfoNonFile* foinfo;   PiaOut*           piaOut;   PiaReadAny*          piaread;   PiaWriteAny*         piawrite;   PebsOut*          pebsOut;   AnypiaOut*        anypiaOut;   EarnProject*      earnProject;   // @cmember True if any pre-1951 railroad earnings.   Boolean           hasrr3750;   // @cmember True if data on screen is valid.   Boolean           valid;   // @cmember Computation year stored in source libraries.   int               baseyearStored;   // @cmember Line indices of page breaks.   int               lineIndex[20];};// @cmember Returns pointer to text view.inline CTextView* CTextDocument::getTextView() const{ return mTextView; }#endif // _H_CTextDocument